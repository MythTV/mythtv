#-----------------------
# Name: locales.py    Stores locale information for filtering results
# Python Library
# Author: Raymond Wagner
#-----------------------
# Author: Roland Ernst
# Modifications:
#   - Added ISO931-2T/2B
#   - Added ISO-3166 alpha-3
#   - Removed unused code
#----------------------

import locale


class LocaleBase:
    __slots__ = ['__immutable']
    _stored = {}
    fallthrough = False

    def __init__(self, *keys):
        for key in keys:
            self._stored[key.lower()] = self
        self.__immutable = True

    def __setattr__(self, key, value):
        if getattr(self, '__immutable', False):
            raise NotImplementedError(self.__class__.__name__ +
                                      ' does not support modification.')
        super().__setattr__(key, value)

    def __delattr__(self, key):
        if getattr(self, '__immutable', False):
            raise NotImplementedError(self.__class__.__name__ +
                                      ' does not support modification.')
        super().__delattr__(key)

    @classmethod
    def getstored(cls, key):
        if key is None:
            return None
        try:
            return cls._stored[key.lower()]
        except:
            raise Exception("'{}' is not a known valid {} code."\
                                  .format(key, cls.__name__))


class Language(LocaleBase):
    __slots__ = ['ISO639_1', 'ISO639_2T', 'ISO639_2B', 'englishname',
                 'nativename']
    _stored = {}

    def __init__(self, iso1, iso2b, iso2t, ename):
        self.ISO639_1 = iso1
        self.ISO639_2B = iso2b
        self.ISO639_2T = iso2t
        self.englishname = ename
#        self.nativename = nname
        super().__init__(iso1, iso2b, iso2t, ename)

    def __str__(self):
        return self.ISO639_1

    def __repr__(self):
        return "<Language '{0.englishname}' ({0.ISO639_1}) ({0.ISO639_2T}) ({0.ISO639_2B})>".format(self)


class Country(LocaleBase):
    __slots__ = ['alpha2', 'alpha3', 'name']
    _stored = {}

    def __init__(self, alpha2, alpha3, name):
        self.alpha2 = alpha2
        self.alpha3 = alpha3
        self.name = name
        super().__init__(alpha2, alpha3, name)

    def __str__(self):
        return self.alpha2

    def __repr__(self):
        return "<Country '{0.name}' ({0.alpha2}) ({0.alpha3})>".format(self)


#    ISO-639-1, ISO-639-2/B, ISO-639-2/T, English Name
Language("ab", "abk", "abk", "Abkhazian")
Language("aa", "aar", "aar", "Afar")
Language("af", "afr", "afr", "Afrikaans")
Language("ak", "aka", "aka", "Akan")
Language("sq", "alb", "sqi", "Albanian")
Language("am", "amh", "amh", "Amharic")
Language("ar", "ara", "ara", "Arabic")
Language("an", "arg", "arg", "Aragonese")
Language("hy", "arm", "hye", "Armenian")
Language("as", "asm", "asm", "Assamese")
Language("av", "ava", "ava", "Avaric")
Language("ae", "ave", "ave", "Avestan")
Language("ay", "aym", "aym", "Aymara")
Language("az", "aze", "aze", "Azerbaijani")
Language("bm", "bam", "bam", "Bambara")
Language("ba", "bak", "bak", "Bashkir")
Language("eu", "baq", "eus", "Basque")
Language("be", "bel", "bel", "Belarusian")
Language("bn", "ben", "ben", "Bengali")
Language("bh", "bih", "bih", "Bihari languages")
Language("bi", "bis", "bis", "Bislama")
Language("nb", "nob", "nob", "Bokmål, Norwegian")
Language("bs", "bos", "bos", "Bosnian")
Language("br", "bre", "bre", "Breton")
Language("bg", "bul", "bul", "Bulgarian")
Language("my", "bur", "mya", "Burmese")
Language("es", "spa", "spa", "Castilian")
Language("ca", "cat", "cat", "Catalan")
Language("km", "khm", "khm", "Central Khmer")
Language("ch", "cha", "cha", "Chamorro")
Language("ce", "che", "che", "Chechen")
Language("ny", "nya", "nya", "Chewa")
Language("ny", "nya", "nya", "Chichewa")
Language("zh", "chi", "zho", "Chinese")
Language("za", "zha", "zha", "Chuang")
Language("cu", "chu", "chu", "Church Slavic")
Language("cu", "chu", "chu", "Church Slavonic")
Language("cv", "chv", "chv", "Chuvash")
Language("kw", "cor", "cor", "Cornish")
Language("co", "cos", "cos", "Corsican")
Language("cr", "cre", "cre", "Cree")
Language("hr", "hrv", "hrv", "Croatian")
Language("cs", "cze", "ces", "Czech")
Language("da", "dan", "dan", "Danish")
Language("dv", "div", "div", "Dhivehi")
Language("dv", "div", "div", "Divehi")
Language("nl", "dut", "nld", "Dutch")
Language("dz", "dzo", "dzo", "Dzongkha")
Language("en", "eng", "eng", "English")
Language("eo", "epo", "epo", "Esperanto")
Language("et", "est", "est", "Estonian")
Language("ee", "ewe", "ewe", "Ewe")
Language("fo", "fao", "fao", "Faroese")
Language("fj", "fij", "fij", "Fijian")
Language("fi", "fin", "fin", "Finnish")
Language("nl", "dut", "nld", "Flemish")
Language("fr", "fre", "fra", "French")
Language("ff", "ful", "ful", "Fulah")
Language("gd", "gla", "gla", "Gaelic")
Language("gl", "glg", "glg", "Galician")
Language("lg", "lug", "lug", "Ganda")
Language("ka", "geo", "kat", "Georgian")
Language("de", "ger", "deu", "German")
Language("ki", "kik", "kik", "Gikuyu")
Language("el", "gre", "ell", "Greek, Modern (1453-)")
Language("kl", "kal", "kal", "Greenlandic")
Language("gn", "grn", "grn", "Guarani")
Language("gu", "guj", "guj", "Gujarati")
Language("ht", "hat", "hat", "Haitian")
Language("ht", "hat", "hat", "Haitian Creole")
Language("ha", "hau", "hau", "Hausa")
Language("he", "heb", "heb", "Hebrew")
Language("hz", "her", "her", "Herero")
Language("hi", "hin", "hin", "Hindi")
Language("ho", "hmo", "hmo", "Hiri Motu")
Language("hu", "hun", "hun", "Hungarian")
Language("is", "ice", "isl", "Icelandic")
Language("io", "ido", "ido", "Ido")
Language("ig", "ibo", "ibo", "Igbo")
Language("id", "ind", "ind", "Indonesian")
Language("ia", "ina", "ina", "Interlingua (International Auxiliary Language Association)")
Language("ie", "ile", "ile", "Interlingue")
Language("iu", "iku", "iku", "Inuktitut")
Language("ik", "ipk", "ipk", "Inupiaq")
Language("ga", "gle", "gle", "Irish")
Language("it", "ita", "ita", "Italian")
Language("ja", "jpn", "jpn", "Japanese")
Language("jv", "jav", "jav", "Javanese")
Language("kl", "kal", "kal", "Kalaallisut")
Language("kn", "kan", "kan", "Kannada")
Language("kr", "kau", "kau", "Kanuri")
Language("ks", "kas", "kas", "Kashmiri")
Language("kk", "kaz", "kaz", "Kazakh")
Language("ki", "kik", "kik", "Kikuyu")
Language("rw", "kin", "kin", "Kinyarwanda")
Language("ky", "kir", "kir", "Kirghiz")
Language("kv", "kom", "kom", "Komi")
Language("kg", "kon", "kon", "Kongo")
Language("ko", "kor", "kor", "Korean")
Language("kj", "kua", "kua", "Kuanyama")
Language("ku", "kur", "kur", "Kurdish")
Language("kj", "kua", "kua", "Kwanyama")
Language("ky", "kir", "kir", "Kyrgyz")
Language("lo", "lao", "lao", "Lao")
Language("la", "lat", "lat", "Latin")
Language("lv", "lav", "lav", "Latvian")
Language("lb", "ltz", "ltz", "Letzeburgesch")
Language("li", "lim", "lim", "Limburgan")
Language("li", "lim", "lim", "Limburger")
Language("li", "lim", "lim", "Limburgish")
Language("ln", "lin", "lin", "Lingala")
Language("lt", "lit", "lit", "Lithuanian")
Language("lu", "lub", "lub", "Luba-Katanga")
Language("lb", "ltz", "ltz", "Luxembourgish")
Language("mk", "mac", "mkd", "Macedonian")
Language("mg", "mlg", "mlg", "Malagasy")
Language("ms", "may", "msa", "Malay")
Language("ml", "mal", "mal", "Malayalam")
Language("dv", "div", "div", "Maldivian")
Language("mt", "mlt", "mlt", "Maltese")
Language("gv", "glv", "glv", "Manx")
Language("mi", "mao", "mri", "Maori")
Language("mr", "mar", "mar", "Marathi")
Language("mh", "mah", "mah", "Marshallese")
Language("ro", "rum", "ron", "Moldavian")
Language("ro", "rum", "ron", "Moldovan")
Language("mn", "mon", "mon", "Mongolian")
Language("na", "nau", "nau", "Nauru")
Language("nv", "nav", "nav", "Navaho")
Language("nv", "nav", "nav", "Navajo")
Language("nd", "nde", "nde", "Ndebele, North")
Language("nr", "nbl", "nbl", "Ndebele, South")
Language("ng", "ndo", "ndo", "Ndonga")
Language("ne", "nep", "nep", "Nepali")
Language("nd", "nde", "nde", "North Ndebele")
Language("se", "sme", "sme", "Northern Sami")
Language("no", "nor", "nor", "Norwegian")
Language("nb", "nob", "nob", "Norwegian Bokmål")
Language("nn", "nno", "nno", "Norwegian Nynorsk")
Language("ii", "iii", "iii", "Nuosu")
Language("ny", "nya", "nya", "Nyanja")
Language("nn", "nno", "nno", "Nynorsk, Norwegian")
Language("ie", "ile", "ile", "Occidental")
Language("oc", "oci", "oci", "Occitan (post 1500)")
Language("oj", "oji", "oji", "Ojibwa")
Language("cu", "chu", "chu", "Old Bulgarian")
Language("cu", "chu", "chu", "Old Church Slavonic")
Language("cu", "chu", "chu", "Old Slavonic")
Language("or", "ori", "ori", "Oriya")
Language("om", "orm", "orm", "Oromo")
Language("os", "oss", "oss", "Ossetian")
Language("os", "oss", "oss", "Ossetic")
Language("pi", "pli", "pli", "Pali")
Language("pa", "pan", "pan", "Panjabi")
Language("ps", "pus", "pus", "Pashto")
Language("fa", "per", "fas", "Persian")
Language("pl", "pol", "pol", "Polish")
Language("pt", "por", "por", "Portuguese")
Language("pa", "pan", "pan", "Punjabi")
Language("ps", "pus", "pus", "Pushto")
Language("qu", "que", "que", "Quechua")
Language("ro", "rum", "ron", "Romanian")
Language("rm", "roh", "roh", "Romansh")
Language("rn", "run", "run", "Rundi")
Language("ru", "rus", "rus", "Russian")
Language("sm", "smo", "smo", "Samoan")
Language("sg", "sag", "sag", "Sango")
Language("sa", "san", "san", "Sanskrit")
Language("sc", "srd", "srd", "Sardinian")
Language("gd", "gla", "gla", "Scottish Gaelic")
Language("sr", "srp", "srp", "Serbian")
Language("sn", "sna", "sna", "Shona")
Language("ii", "iii", "iii", "Sichuan Yi")
Language("sd", "snd", "snd", "Sindhi")
Language("si", "sin", "sin", "Sinhala")
Language("si", "sin", "sin", "Sinhalese")
Language("sk", "slo", "slk", "Slovak")
Language("sl", "slv", "slv", "Slovenian")
Language("so", "som", "som", "Somali")
Language("st", "sot", "sot", "Sotho, Southern")
Language("nr", "nbl", "nbl", "South Ndebele")
Language("es", "spa", "spa", "Spanish")
Language("su", "sun", "sun", "Sundanese")
Language("sw", "swa", "swa", "Swahili")
Language("ss", "ssw", "ssw", "Swati")
Language("sv", "swe", "swe", "Swedish")
Language("tl", "tgl", "tgl", "Tagalog")
Language("ty", "tah", "tah", "Tahitian")
Language("tg", "tgk", "tgk", "Tajik")
Language("ta", "tam", "tam", "Tamil")
Language("tt", "tat", "tat", "Tatar")
Language("te", "tel", "tel", "Telugu")
Language("th", "tha", "tha", "Thai")
Language("bo", "tib", "bod", "Tibetan")
Language("ti", "tir", "tir", "Tigrinya")
Language("to", "ton", "ton", "Tonga (Tonga Islands)")
Language("ts", "tso", "tso", "Tsonga")
Language("tn", "tsn", "tsn", "Tswana")
Language("tr", "tur", "tur", "Turkish")
Language("tk", "tuk", "tuk", "Turkmen")
Language("tw", "twi", "twi", "Twi")
Language("ug", "uig", "uig", "Uighur")
Language("uk", "ukr", "ukr", "Ukrainian")
Language("ur", "urd", "urd", "Urdu")
Language("ug", "uig", "uig", "Uyghur")
Language("uz", "uzb", "uzb", "Uzbek")
Language("ca", "cat", "cat", "Valencian")
Language("ve", "ven", "ven", "Venda")
Language("vi", "vie", "vie", "Vietnamese")
Language("vo", "vol", "vol", "Volapük")
Language("wa", "wln", "wln", "Walloon")
Language("cy", "wel", "cym", "Welsh")
Language("fy", "fry", "fry", "Western Frisian")
Language("wo", "wol", "wol", "Wolof")
Language("xh", "xho", "xho", "Xhosa")
Language("yi", "yid", "yid", "Yiddish")
Language("yo", "yor", "yor", "Yoruba")
Language("za", "zha", "zha", "Zhuang")
Language("zu", "zul", "zul", "Zulu")



# ISO-3166 alpha-2, alpha-3, English Name
Country("AF", "AFG", "Afghanistan")
Country("AL", "ALB", "Albania")
Country("DZ", "DZA", "Algeria")
Country("AS", "ASM", "American Samoa")
Country("AD", "AND", "Andorra")
Country("AO", "AGO", "Angola")
Country("AI", "AIA", "Anguilla")
Country("AQ", "ATA", "Antarctica")
Country("AG", "ATG", "Antigua and Barbuda")
Country("AR", "ARG", "Argentina")
Country("AM", "ARM", "Armenia")
Country("AW", "ABW", "Aruba")
Country("AU", "AUS", "Australia")
Country("AT", "AUT", "Austria")
Country("AZ", "AZE", "Azerbaijan")
Country("BS", "BHS", "Bahamas (the)")
Country("BH", "BHR", "Bahrain")
Country("BD", "BGD", "Bangladesh")
Country("BB", "BRB", "Barbados")
Country("BY", "BLR", "Belarus")
Country("BE", "BEL", "Belgium")
Country("BZ", "BLZ", "Belize")
Country("BJ", "BEN", "Benin")
Country("BM", "BMU", "Bermuda")
Country("BT", "BTN", "Bhutan")
Country("BO", "BOL", "Bolivia (Plurinational State of)")
Country("BQ", "BES", "Bonaire, Sint Eustatius and Saba")
Country("BA", "BIH", "Bosnia and Herzegovina")
Country("BW", "BWA", "Botswana")
Country("BV", "BVT", "Bouvet Island")
Country("BR", "BRA", "Brazil")
Country("IO", "IOT", "British Indian Ocean Territory (the)")
Country("BN", "BRN", "Brunei Darussalam")
Country("BG", "BGR", "Bulgaria")
Country("BF", "BFA", "Burkina Faso")
Country("BI", "BDI", "Burundi")
Country("CV", "CPV", "Cabo Verde")
Country("KH", "KHM", "Cambodia")
Country("CM", "CMR", "Cameroon")
Country("CA", "CAN", "Canada")
Country("KY", "CYM", "Cayman Islands (the)")
Country("CF", "CAF", "Central African Republic (the)")
Country("TD", "TCD", "Chad")
Country("CL", "CHL", "Chile")
Country("CN", "CHN", "China")
Country("CX", "CXR", "Christmas Island")
Country("CC", "CCK", "Cocos (Keeling) Islands (the)")
Country("CO", "COL", "Colombia")
Country("KM", "COM", "Comoros (the)")
Country("CD", "COD", "Congo (the Democratic Republic of the)")
Country("CG", "COG", "Congo (the)")
Country("CK", "COK", "Cook Islands (the)")
Country("CR", "CRI", "Costa Rica")
Country("HR", "HRV", "Croatia")
Country("CU", "CUB", "Cuba")
Country("CW", "CUW", "Curaçao")
Country("CY", "CYP", "Cyprus")
Country("CZ", "CZE", "Czechia")
Country("CI", "CIV", "Côte d'Ivoire")
Country("DK", "DNK", "Denmark")
Country("DJ", "DJI", "Djibouti")
Country("DM", "DMA", "Dominica")
Country("DO", "DOM", "Dominican Republic (the)")
Country("EC", "ECU", "Ecuador")
Country("EG", "EGY", "Egypt")
Country("SV", "SLV", "El Salvador")
Country("GQ", "GNQ", "Equatorial Guinea")
Country("ER", "ERI", "Eritrea")
Country("EE", "EST", "Estonia")
Country("SZ", "SWZ", "Eswatini")
Country("ET", "ETH", "Ethiopia")
Country("FK", "FLK", "Falkland Islands (the) [Malvinas]")
Country("FO", "FRO", "Faroe Islands (the)")
Country("FJ", "FJI", "Fiji")
Country("FI", "FIN", "Finland")
Country("FR", "FRA", "France")
Country("GF", "GUF", "French Guiana")
Country("PF", "PYF", "French Polynesia")
Country("TF", "ATF", "French Southern Territories (the)")
Country("GA", "GAB", "Gabon")
Country("GM", "GMB", "Gambia (the)")
Country("GE", "GEO", "Georgia")
Country("DE", "DEU", "Germany")
Country("GH", "GHA", "Ghana")
Country("GI", "GIB", "Gibraltar")
Country("GR", "GRC", "Greece")
Country("GL", "GRL", "Greenland")
Country("GD", "GRD", "Grenada")
Country("GP", "GLP", "Guadeloupe")
Country("GU", "GUM", "Guam")
Country("GT", "GTM", "Guatemala")
Country("GG", "GGY", "Guernsey")
Country("GN", "GIN", "Guinea")
Country("GW", "GNB", "Guinea-Bissau")
Country("GY", "GUY", "Guyana")
Country("HT", "HTI", "Haiti")
Country("HM", "HMD", "Heard Island and McDonald Islands")
Country("VA", "VAT", "Holy See (the)")
Country("HN", "HND", "Honduras")
Country("HK", "HKG", "Hong Kong")
Country("HU", "HUN", "Hungary")
Country("IS", "ISL", "Iceland")
Country("IN", "IND", "India")
Country("ID", "IDN", "Indonesia")
Country("IR", "IRN", "Iran (Islamic Republic of)")
Country("IQ", "IRQ", "Iraq")
Country("IE", "IRL", "Ireland")
Country("IM", "IMN", "Isle of Man")
Country("IL", "ISR", "Israel")
Country("IT", "ITA", "Italy")
Country("JM", "JAM", "Jamaica")
Country("JP", "JPN", "Japan")
Country("JE", "JEY", "Jersey")
Country("JO", "JOR", "Jordan")
Country("KZ", "KAZ", "Kazakhstan")
Country("KE", "KEN", "Kenya")
Country("KI", "KIR", "Kiribati")
Country("KP", "PRK", "Korea (the Democratic People's Republic of)")
Country("KR", "KOR", "Korea (the Republic of)")
Country("KW", "KWT", "Kuwait")
Country("KG", "KGZ", "Kyrgyzstan")
Country("LA", "LAO", "Lao People's Democratic Republic (the)")
Country("LV", "LVA", "Latvia")
Country("LB", "LBN", "Lebanon")
Country("LS", "LSO", "Lesotho")
Country("LR", "LBR", "Liberia")
Country("LY", "LBY", "Libya")
Country("LI", "LIE", "Liechtenstein")
Country("LT", "LTU", "Lithuania")
Country("LU", "LUX", "Luxembourg")
Country("MO", "MAC", "Macao")
Country("MG", "MDG", "Madagascar")
Country("MW", "MWI", "Malawi")
Country("MY", "MYS", "Malaysia")
Country("MV", "MDV", "Maldives")
Country("ML", "MLI", "Mali")
Country("MT", "MLT", "Malta")
Country("MH", "MHL", "Marshall Islands (the)")
Country("MQ", "MTQ", "Martinique")
Country("MR", "MRT", "Mauritania")
Country("MU", "MUS", "Mauritius")
Country("YT", "MYT", "Mayotte")
Country("MX", "MEX", "Mexico")
Country("FM", "FSM", "Micronesia (Federated States of)")
Country("MD", "MDA", "Moldova (the Republic of)")
Country("MC", "MCO", "Monaco")
Country("MN", "MNG", "Mongolia")
Country("ME", "MNE", "Montenegro")
Country("MS", "MSR", "Montserrat")
Country("MA", "MAR", "Morocco")
Country("MZ", "MOZ", "Mozambique")
Country("MM", "MMR", "Myanmar")
Country("NA", "NAM", "Namibia")
Country("NR", "NRU", "Nauru")
Country("NP", "NPL", "Nepal")
Country("NL", "NLD", "Netherlands (the)")
Country("NC", "NCL", "New Caledonia")
Country("NZ", "NZL", "New Zealand")
Country("NI", "NIC", "Nicaragua")
Country("NE", "NER", "Niger (the)")
Country("NG", "NGA", "Nigeria")
Country("NU", "NIU", "Niue")
Country("NF", "NFK", "Norfolk Island")
Country("MP", "MNP", "Northern Mariana Islands (the)")
Country("NO", "NOR", "Norway")
Country("OM", "OMN", "Oman")
Country("PK", "PAK", "Pakistan")
Country("PW", "PLW", "Palau")
Country("PS", "PSE", "Palestine, State of")
Country("PA", "PAN", "Panama")
Country("PG", "PNG", "Papua New Guinea")
Country("PY", "PRY", "Paraguay")
Country("PE", "PER", "Peru")
Country("PH", "PHL", "Philippines (the)")
Country("PN", "PCN", "Pitcairn")
Country("PL", "POL", "Poland")
Country("PT", "PRT", "Portugal")
Country("PR", "PRI", "Puerto Rico")
Country("QA", "QAT", "Qatar")
Country("MK", "MKD", "Republic of North Macedonia")
Country("RO", "ROU", "Romania")
Country("RU", "RUS", "Russian Federation (the)")
Country("RW", "RWA", "Rwanda")
Country("RE", "REU", "Réunion")
Country("BL", "BLM", "Saint Barthélemy")
Country("SH", "SHN", "Saint Helena, Ascension and Tristan da Cunha")
Country("KN", "KNA", "Saint Kitts and Nevis")
Country("LC", "LCA", "Saint Lucia")
Country("MF", "MAF", "Saint Martin (French part)")
Country("PM", "SPM", "Saint Pierre and Miquelon")
Country("VC", "VCT", "Saint Vincent and the Grenadines")
Country("WS", "WSM", "Samoa")
Country("SM", "SMR", "San Marino")
Country("ST", "STP", "Sao Tome and Principe")
Country("SA", "SAU", "Saudi Arabia")
Country("SN", "SEN", "Senegal")
Country("RS", "SRB", "Serbia")
Country("SC", "SYC", "Seychelles")
Country("SL", "SLE", "Sierra Leone")
Country("SG", "SGP", "Singapore")
Country("SX", "SXM", "Sint Maarten (Dutch part)")
Country("SK", "SVK", "Slovakia")
Country("SI", "SVN", "Slovenia")
Country("SB", "SLB", "Solomon Islands")
Country("SO", "SOM", "Somalia")
Country("ZA", "ZAF", "South Africa")
Country("GS", "SGS", "South Georgia and the South Sandwich Islands")
Country("SS", "SSD", "South Sudan")
Country("ES", "ESP", "Spain")
Country("LK", "LKA", "Sri Lanka")
Country("SD", "SDN", "Sudan (the)")
Country("SR", "SUR", "Suriname")
Country("SJ", "SJM", "Svalbard and Jan Mayen")
Country("SE", "SWE", "Sweden")
Country("CH", "CHE", "Switzerland")
Country("SY", "SYR", "Syrian Arab Republic")
Country("TW", "TWN", "Taiwan (Province of China)")
Country("TJ", "TJK", "Tajikistan")
Country("TZ", "TZA", "Tanzania, United Republic of")
Country("TH", "THA", "Thailand")
Country("TL", "TLS", "Timor-Leste")
Country("TG", "TGO", "Togo")
Country("TK", "TKL", "Tokelau")
Country("TO", "TON", "Tonga")
Country("TT", "TTO", "Trinidad and Tobago")
Country("TN", "TUN", "Tunisia")
Country("TR", "TUR", "Turkey")
Country("TM", "TKM", "Turkmenistan")
Country("TC", "TCA", "Turks and Caicos Islands (the)")
Country("TV", "TUV", "Tuvalu")
Country("UG", "UGA", "Uganda")
Country("UA", "UKR", "Ukraine")
Country("AE", "ARE", "United Arab Emirates (the)")
Country("GB", "GBR", "United Kingdom of Great Britain and Northern Ireland (the)")
Country("UM", "UMI", "United States Minor Outlying Islands (the)")
Country("US", "USA", "United States of America (the)")
Country("UY", "URY", "Uruguay")
Country("UZ", "UZB", "Uzbekistan")
Country("VU", "VUT", "Vanuatu")
Country("VE", "VEN", "Venezuela (Bolivarian Republic of)")
Country("VN", "VNM", "Viet Nam")
Country("VG", "VGB", "Virgin Islands (British)")
Country("VI", "VIR", "Virgin Islands (U.S.)")
Country("WF", "WLF", "Wallis and Futuna")
Country("EH", "ESH", "Western Sahara")
Country("YE", "YEM", "Yemen")
Country("ZM", "ZMB", "Zambia")
Country("ZW", "ZWE", "Zimbabwe")
Country("AX", "ALA", "Åland Islands")



if __name__ == '__main__':

    print(repr(Language.getstored('de')))
    print(repr(Language.getstored('hrv')))
    print(repr(Language.getstored('Danish')))
    print(repr(Language.getstored('sqi')))
    print(repr(Language.getstored("alb")))
    print(repr(Language.getstored("German")))

    print(Language.getstored('hrv').ISO639_1)
    print(Language.getstored('de').ISO639_2B)
    print(Language.getstored('de').ISO639_2T)
    print(Language.getstored('deu').ISO639_2T)

    print(repr(Country.getstored('ax')))
    print(Country.getstored('AX').name)
    print(Country.getstored('ALA').alpha2)
    print(Country.getstored("Åland Islands").alpha3)

    print(repr(Country.getstored('MC')))
    print(Country.getstored('MC').name)
    print(Country.getstored('mco').alpha2)
    print(Country.getstored("Monaco").alpha3)
